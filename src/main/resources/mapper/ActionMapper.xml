<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dolphinfeed.disperts.mbg.mapper.ActionMapper">
  <resultMap id="BaseResultMap" type="com.dolphinfeed.disperts.mbg.model.Action">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="scene_id" jdbcType="INTEGER" property="sceneId" />
    <result column="action_id" jdbcType="INTEGER" property="actionId" />
    <result column="pre_step_id" jdbcType="INTEGER" property="preStepId" />
    <result column="last_step_id" jdbcType="INTEGER" property="lastStepId" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.dolphinfeed.disperts.mbg.model.Action">
    <result column="config" jdbcType="LONGVARCHAR" property="config" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, scene_id, action_id, pre_step_id, last_step_id, status, create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    config
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.dolphinfeed.disperts.mbg.model.ActionExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from action
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.dolphinfeed.disperts.mbg.model.ActionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from action
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from action
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from action
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dolphinfeed.disperts.mbg.model.ActionExample">
    delete from action
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dolphinfeed.disperts.mbg.model.Action">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into action (scene_id, action_id, pre_step_id, 
      last_step_id, status, create_time, 
      update_time, config)
    values (#{sceneId,jdbcType=INTEGER}, #{actionId,jdbcType=INTEGER}, #{preStepId,jdbcType=INTEGER}, 
      #{lastStepId,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{config,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.dolphinfeed.disperts.mbg.model.Action">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into action
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sceneId != null">
        scene_id,
      </if>
      <if test="actionId != null">
        action_id,
      </if>
      <if test="preStepId != null">
        pre_step_id,
      </if>
      <if test="lastStepId != null">
        last_step_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="config != null">
        config,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sceneId != null">
        #{sceneId,jdbcType=INTEGER},
      </if>
      <if test="actionId != null">
        #{actionId,jdbcType=INTEGER},
      </if>
      <if test="preStepId != null">
        #{preStepId,jdbcType=INTEGER},
      </if>
      <if test="lastStepId != null">
        #{lastStepId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="config != null">
        #{config,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dolphinfeed.disperts.mbg.model.ActionExample" resultType="java.lang.Long">
    select count(*) from action
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update action
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sceneId != null">
        scene_id = #{record.sceneId,jdbcType=INTEGER},
      </if>
      <if test="record.actionId != null">
        action_id = #{record.actionId,jdbcType=INTEGER},
      </if>
      <if test="record.preStepId != null">
        pre_step_id = #{record.preStepId,jdbcType=INTEGER},
      </if>
      <if test="record.lastStepId != null">
        last_step_id = #{record.lastStepId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.config != null">
        config = #{record.config,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update action
    set id = #{record.id,jdbcType=INTEGER},
      scene_id = #{record.sceneId,jdbcType=INTEGER},
      action_id = #{record.actionId,jdbcType=INTEGER},
      pre_step_id = #{record.preStepId,jdbcType=INTEGER},
      last_step_id = #{record.lastStepId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      config = #{record.config,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update action
    set id = #{record.id,jdbcType=INTEGER},
      scene_id = #{record.sceneId,jdbcType=INTEGER},
      action_id = #{record.actionId,jdbcType=INTEGER},
      pre_step_id = #{record.preStepId,jdbcType=INTEGER},
      last_step_id = #{record.lastStepId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dolphinfeed.disperts.mbg.model.Action">
    update action
    <set>
      <if test="sceneId != null">
        scene_id = #{sceneId,jdbcType=INTEGER},
      </if>
      <if test="actionId != null">
        action_id = #{actionId,jdbcType=INTEGER},
      </if>
      <if test="preStepId != null">
        pre_step_id = #{preStepId,jdbcType=INTEGER},
      </if>
      <if test="lastStepId != null">
        last_step_id = #{lastStepId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="config != null">
        config = #{config,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.dolphinfeed.disperts.mbg.model.Action">
    update action
    set scene_id = #{sceneId,jdbcType=INTEGER},
      action_id = #{actionId,jdbcType=INTEGER},
      pre_step_id = #{preStepId,jdbcType=INTEGER},
      last_step_id = #{lastStepId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      config = #{config,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dolphinfeed.disperts.mbg.model.Action">
    update action
    set scene_id = #{sceneId,jdbcType=INTEGER},
      action_id = #{actionId,jdbcType=INTEGER},
      pre_step_id = #{preStepId,jdbcType=INTEGER},
      last_step_id = #{lastStepId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>